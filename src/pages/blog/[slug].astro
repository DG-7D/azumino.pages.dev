---
import { execSync } from "child_process";
import { getCollection, render } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getState } from "./_functions";
import Img from "@/components/Img.astro";
import A from "@/components/A.astro";
import { toJpDateString, toJpISODateString, toJpISODateTimeString } from "@/utils/Date.mjs";
export async function getStaticPaths() {
    const blogEntries = await getCollection("blog", post => {
        return import.meta.env.DEV || getState(post) == "published";
    });
    return blogEntries.map(entry => ({
        params: { slug: entry.id },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);

const publish = entry.data.publishDate;
const lastUpdate = (() => {
    const lastUpdateISO = execSync(`git log -1 --format="%ad" --date="iso" ./src/content/${entry.collection}/${entry.id}`).toString();
    return lastUpdateISO.length != 0 ? new Date(lastUpdateISO) : undefined;
})();

const lastUpdateString = (() => {
    if (!lastUpdate || lastUpdate < publish) {
        return undefined;
    }
    const string = toJpDateString(lastUpdate);
    if (publish.getFullYear() != lastUpdate.getFullYear()) {
        return string;
    }
    if (publish.getMonth() != lastUpdate.getMonth()) {
        return string.slice(5, 11);
    }
    if (publish.getDate() != lastUpdate.getDate()) {
        return string.slice(8, 11);
    }
    return undefined;
})();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
    <div class="publishDate">
        <time datetime={toJpISODateString(publish)}>{toJpDateString(publish)}</time>
        {
            lastUpdateString && (
                <>
                    (最終更新: <time datetime={toJpISODateTimeString(lastUpdate!)}>{lastUpdateString}</time>)
                </>
            )
        }
    </div>
    <Content components={{ a: A, img: Img }} />
</BaseLayout>
<style>
    div.publishDate {
        margin-top: calc(-1 * var(--gap));
        color: var(--sub-color);
    }
</style>
