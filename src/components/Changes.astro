---
import { execSync } from "child_process";
import { toJpDateString } from "@/utils/Date.mjs";

interface Props {
    count: number;
    inline?: boolean;
}

const commits: {
    date: string;
    message: string;
}[] = JSON.parse(("[" + execSync('git log --format=\'{"date":"%ad","message":"%s"},\' --date=short --first-parent', { shell: "bash" }).toString() + "]").replace(",\n]", "]"));
const history = new Map<string, Set<string>>();
let overflow: boolean = false;
for (const commit of commits) {
    if (commit.message.startsWith("_")) {
        continue;
    }
    if (!history.has(commit.date) && history.size == Astro.props.count) {
        overflow = true;
        continue;
    }
    history.set(commit.date, new Set([...(history.get(commit.date) ?? []), commit.message]));
}
---

<dl class={Astro.props.inline ? "inline" : ""}>
    {
        // prettier-ignore
        [...history].map(([date, messages]) =>
            <>
                <dt><time datetime={date}>{toJpDateString(date)}</time></dt>
                {[...messages].map(message => (
                    <dd>{message}</dd>
                ))}
            </>
        )
    }
    {
        // prettier-ignore
        overflow && (
            <>
                <dt>それ以前</dt>
                <dd><a href="/changes/">もっと見る</a></dd>
            </>
        )
    }
</dl>
