---
import { execSync } from "child_process";
import { toJpDateString } from "@/utils/Date.mjs";

interface Props {
    count: number;
    inline?: boolean;
}

const separator = "\uF8FF";
const commits = execSync(`git log --format=%ad${separator}%s --date=short --first-parent`)
    .toString()
    .split("\n")
    .map(line => {
        const [date, message] = line.split(separator);
        return {
            date: date,
            message: message,
        };
    });
const history = Object.groupBy(
    commits.filter(commit => commit.date && commit.message && !commit.message.startsWith("_") && !commit.message.startsWith("Merge")),
    commit => commit.date!,
);
const dates = Object.keys(history);

let overflow = false;
if (dates.length > Astro.props.count) {
    overflow = true;
    dates.splice(Astro.props.count);
}
---

<dl class={Astro.props.inline ? "inline" : ""}>
    {
        // prettier-ignore
        dates.map(date => (
            <>
                <dt><time datetime={date}>{toJpDateString(date)}</time></dt>
                {
                    history[date]!.map(commit => (
                        <dd>{commit.message}</dd>
                    ))
                }
            </>
        ))
    }
    {
        // prettier-ignore
        overflow && (
            <>
                <dt>それ以前</dt>
                <dd><a href="/changes/">もっと見る</a></dd>
            </>
        )
    }
</dl>
