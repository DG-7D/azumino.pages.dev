---
import { execSync } from "child_process";
import { toJpDateString } from "@/utils/Date.mjs";

interface Props {
    count: number;
    inline?: boolean;
}

// TODO: groupByがきたら使ってもいいかも
const separator = "\uF8FF";
const history = new Map<string, Set<string>>();
let overflow: boolean = false;
execSync(`git log --format=%ad${separator}%s --date=short --first-parent`)
    .toString()
    .split("\n")
    .forEach(line => {
        const [date, message] = line.split(separator);
        if (!date || !message || message.startsWith("_")) {
            return;
        }
        if (!history.has(date) && history.size == Astro.props.count) {
            overflow = true;
            return;
        }
        history.set(date, new Set([...(history.get(date) ?? []), message]));
    });
---

<dl class={Astro.props.inline ? "inline" : ""}>
    {
        // prettier-ignore
        [...history].map(([date, messages]) =>
            <>
                <dt><time datetime={date}>{toJpDateString(date)}</time></dt>
                {[...messages].map(message => (
                    <dd>{message}</dd>
                ))}
            </>
        )
    }
    {
        // prettier-ignore
        overflow && (
            <>
                <dt>それ以前</dt>
                <dd><a href="/changes/">もっと見る</a></dd>
            </>
        )
    }
</dl>
